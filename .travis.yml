branches:
  only:
  - "/^v[0-9]/"
matrix:
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/configurators/meshblu-json \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: QKHx0kbGdyrcyUkl84+C9c6g51nv4Eg5t/FBQZ2xJ/2wl5CQZBECmro8RRia/dK/rZlKEkiahaJOkczHg1ngx6AyceivHwGah3vluRm0sqzNwfE7G55gWi+29KedeIPG7sGW9KXBRvK8irfht8HsgdhcmPjAMFSQiV5Z4SIMJmpEdPjt/PJm4jWgj+f9CKgmXTin4a6WQ5+a6wAbm9l2c3aHVFLh/FnSfxxIRwiYSRemwLKCihk1t2nCi0tOxO91qyId5YT7gCiYixOyoUcbZnO46RLmTw7Z/PSZ12K6VXoffX1hGTJpDl2IR0ejXjMys2j9BjqFpaCTqErMpieBZ/UKHCatTnUXvvWuW60Hqi/ZtPdfTK4BjweWETVakYaEVg6xiZqvX6DTV2t6HsRHgdj5s6eyTe8zkDCoDxXGhcUEodDsEinQf4nvWHFAzRudgD/uuf+zzqtv+Kb2n2coLzfu+mJTcf9gOouyw0OGHP71MtpOn0gvJW39qyZbhKAokLqqReIKXXsjSKXxPqopcx8tomxA7nQ0ok6YvZUmbAmmBEbeMIBpagwmDhWhEksHk9M2XyRqIHg0eGBuZMkazJHxG/hj0Mprrv0a31Ygwoi26aQVSoctcTJshFid++7XsYa8h3kgDfs5UR7VrRwtaHcSCTR/hvUa7b0KOOheWb4=
  - secure: V9c4dTEHqVFKtLlTyyryi0Djjl+2vEcHt/T7ixFHLqLy6dsfppe6TUBEvPuOiFqTUT6QoTbx/ibDB2h1S/C8olnkhqCHolcuUoOXrlln2G7y6VBSTo35b7UR2OuEalVuC92JW0hO3pl9wguaiOeT3OJwh1vvLFA/TabWCd66y4m0hZa9UWzMY8mfwGBD/Jh+3OxypFE4Pq18bQYeLkU/EAXzRLwgtcSXpbDVOgAlEkG0e22WzjLqcO1Ke8gTnpEn8RfcxXg88hz5m/OWw6vYWRWtXlRKpqFInsDmyKUokMJ7qmaZtx3Q6tWWYf9Z56pyh79BTibKhzgx898bl8pmZzFsM6e3ikbV6UTOaLH63+GIHrNLkawhj8qnJzlxRbXwa0lVkG2yoPmrQT6zlsXHRje2NPJJo5j1gMfnmGMGd/POdGvpzg9ZIhJRvzOztTRTzcoQpCTrXraSjpU3eS3ahb6mWSVuFAQxYsUSU0eitmk1Jb0USdJdDW5/eKky67QzGwSHe74z0QdJkgunRZNIbivTxhwJNoKnWrWTranc/vEFLur1yzFrNkA+M7wB96GMV3BcwWhPB/Co1R+1clY89e2x5iygu1DVrmnxwBcqmq90JePkkDFx6xjVx5auhNszcYQL0vZhVE/gPBliuA+0flGkGvDrpPNAPVMQ4XTuAjE=
  - secure: kmHC6MQOdB9X1zc1Ez3GTgs4ezJ2zxfkI3+Zl9vMe1iJxFnazvCKLSTCBUpc8Gj9B/q8Ftwn50aRh600f/eJtBUy7Al/sKcWbnn3BxOXUG/wOAJi7YIYjhUPz8FlBRu9GjZKjjkg9t7nI1PGM8JXCifY1XGijQrPmZT7oQjdb7499gP/DUHY4A9bLQZsrhIDZanRZJbolqpQlwHRQYKl2Mw+d/DLiyiAphgwk+Lldqg7yY3ZFCm67qBVUfTzO2MR8w/vP94zULFabcNztAAPdXo6XHw5R/ywF2RazOC2yWSR3bVG/cYxL0uzhgusbwTgGgZMSQNQfH3AxeVJP+XwPVWGtnA24rNP1cxXP9VIXacQICBEnh4aimNT+NF3sOVuA4ITt2UszTBHBprwosilU0vhmtBT15yI6fQziYnPaueASD3oTPm+Qc9mAwmu2+11dSUrrWSZqTsqu6kvOjt22Sg049QGWYVP2BmXxKXEzDlt1QbohFaezYmed/geeLIjEHz+3HyZFr6O0uGn2a1mzvI/5E1+Q0469uggkl4Aqx2d4/E6HonSaWb2W1COFMqoD6z4OeovyYNVJ24Vq0cMXyQS2wrxLNdOa7r4zhr30k2xQKDY+tIjyKXbDvR9CJQOxI59gzcg7GlY4nFGwcrJ490RLYKBLeBdWKCyGB8b9qE=
  - secure: CVCjAVB1+43nqSLd32SX68uwSoaffjfKRSDQviT1VnbfK4DqI8nVWGGAAO96iqi7olmzetEZW3OGMuUSRAsfPx4Y5mDnscCmPsyseY0KiX3SeAWN4CW9nd+HPlNkmnWYszh5g9p+QQuHyntEm9nP4TplM/he4fP42C7es1kbLG0CQ2xruHnZefXV3PgheDgRFPF5llGRTwDoSR4nQHmCtEbfIST3x+A3wgwSwZGZ9DqjcBdNJhi1TP3TNdlto4aVbuukFAT+nydS9J4U5ofy5e9h/L7QxML/y2lAeZTYe6UO824Ijl/kqDfJTRP+6LaVysZTs5z5hN9IH9PtIU5vH2QLLLlBKtr7lKV3HJthS5RpWvRIquPV4wPUCkEQGOGIYKvsgTVo8Ma2ZxPOUROrLn4/bpSosRFHNtYFBMg+gTalgPthXxJ2VVgkbGPg2LuOegGdcmsqqmOoIcvkIoXOl1WIpnhZ+2/LLnHDue+KkdetuIrpQkNXdLg6PyJolhkvuCNcjZgZeKd6dLVmOsW4wzHP5jzHUga3drF8jrBe9x1l0RzPVPjZ5U3CvSCtJR7MI6T81vrnI6h7+u6ODjCIzFORcQn3Zd7SDCkt5xJb7HW/+RULILX7i2q7QhXKGJEGIUJ3+i6Dx2ZKVcq1AyLllR6xAmKTY3GSl5AO60HJfpU=
  - secure: A3tqeEHlyd9WVd8OJpOJWF5nf6+IOhtPwmg8vCu+T/u561zm0mjlw1pTjkyUJVQoCnKSJ8/fjTGkz/98NM4RWArlUQPiW4LTVaYfjZljmiJhOK3rRsc4UgZtuGfKm9H9DrNvaVcWSPs6zLMzXu7eZJJM7JGbxfHu1tx3t/16Fs3gTtqTSFLplV2Urk2e/+LyJq54xIHqNik8in1dsYOOaEuyRL4fdqnFI/mRbYVuJgy41nk8spU4byz7IWabPJZ5lY/kg/tNyyaP92EezzjtUOJxKmXLVQq7NSfjBmku2tpyhikENIBknotdEiVi7NG3QYMNR/Jr/foRjdgU4W3ib44ibFsNdsMIxgL2Ax6JuVjNKz0pUhbFaitJ3SijCKtOITp0ts9ozVARP4WwEgdUtPxlEMQp+zjOUfk4a5nhZCfU/azaLW8c4RGWAXhf+sqviV4FT+lioPcGGNRmKuNCliELR9e8gYUDigE8BYEHsNIoDHJw1i6jK+56w0o9HlGuLLmDcr3IshKnKhTwOXdnd3MF9CSPh1AU7RueEMP/mrUuHPa4qpBxrLwPWoz5V6Rb91eoTmkJbiTmQgMyU6nvO/k9fAyyG5x7kQx7/q5SoL7sICRtJ/bpL/mn3hy0Nqh/C/khf0HvMoGq7jRRz01hmSy26E/tDSegfyNxLbN8s4Q=
  - secure: h3sgVvAiQx/+seZG4DMMqRxR8OulGzyfRkhzeoY+Tr3TSt7ie04OI1/XGHNjbq6g7WjZV6pM/bezIWmDUmnkO47gmn/kfT7BBfrtCbUGIvNTlOkH58KBjfT77UvtbrfCrmAKL5K27uq185JJ1W2bopOjP6TXIvRRQBcS7hZPekO5YhmK315Jja6ZURlQOjN9tGQlayEKUJZ9HlKrc62kS5wA2htVLyGYS8W2SPKLBPuZAd6uwuBnIZfQFFkiW2CNaaVriUS1IXHjbWcoO8AkadtvI6FlXMddWFxv8B2D4S+iXEgVpRw/5ss5YJUikYog4ShMeNSev/hbeqyqSzuSaPly/zHLG+9t086RJT06kMldQILkS6+RZ42ozTePaDKjw1NGBx+7akQxuuUE0FGFXhT6cCEDIsGW3KOwxROAErR1Th+OMYIPhvkQJTORavRkdVPRBu3Rakxq4L/JceL3rrb0UNTQuKSwDRockWxwMNktybgFvp5tpIWTBw1soyZ0ZzUrGhOaI6LSylaRENtx4uETwoE4ZV9ZmaFoAe7PfhNeAfRtJTH2dxTbvZzmgjbZGiz641zE+DG2nfG+MjGZFmf8fSkUBW/sH4ZhyqBG9Vo3e4nMMqMIKncPNEAH+/4cfEPvhY8uVRKYTwZmviH1QO4lc3E5vQBjyfXIuCqt3ok=
  - secure: mzZMyq+ZDViHeDHDwhdlxHsmwpAGU9mtde0rzg0oFv4/d5MLjS4K4tt/qO/pXkuymvM7mCp1r/LDs2/mArRcvfMcllP+yoe/LSZ/3FsEErfZs+z1Sq/uvaTjETBdHgS136bwuonDWcxs7Hlsa5C/Hf8WTp49X1vPDI1VVdDZC3OmyE6+blTHz1GuWENt2WCcMTH1pO9IkOvmCF/TaWDacQJEQuVIobPQKqHPg2D6rV9XIwQE9cGb9L5sHVaIfpqF0AtsfT+USlu20mdY6r4++hsXpt13cYSmVUjKjX1JjpvV1bCeJpIPr8AYUVDg2Q352u26lXwKqbEG9Sky/a1M2xpLijbvS+ybP4Re45Jpwva6JSeLzeS4vrEU7G4U6ka4tfkBk2FvnzqvSAPnsC5r8vnEZSyb5pHfUZv/xxqf+5qQC+U1L/EL5Kl4Y6GLDeD55ObTQFVxgoy7T4xGxMQYZSYfv/y+RWDG61v5jFkrQHCY5PJeDxaqKtLuOVlJ4n0MVWD/UFsBzY2r8UeHMG0yhEtonb+PFrN0QmGj86qN5KM7tjyqpI2nJe+pDCr/J9bRBdIiZyxHW+Nka7jCrtJDBWMM+GJ6PKfyITubqw9kI0/0ZfTaunwYtkBmhPv3JbYA1rsrwlLs2LQ+ZhXtJWfV6musuWWUGqIOZ59NBftAB8s=
  - secure: ey3AllRt18KZvm/HZvuGUBxtqfbCIg9nnxjks+a2Bmlw8/CuqywfvJDhu8JEc+8fDFCXzBu7i/dxB/7ucTGISRm5Dt56bVO15hULXowmQ496KSgNFSQeLew90X9kUXXFg4Ve1fZri6Yra8Z2stY4SNeoKdkiCjEV0Sk/oi1XwROQ3fseUAGr+fP/Nbm30nqpL6FKaVgFpCdjBtN+M5dAtBP+b0aeHoQMpa1bndjtLtXrrHavQZtB+/EzEeNh74cctfTwN510va7fH5xNDlKLrd9yMbR+hi5zgTvn4mo28HbjjpLP7UrhKesAlQ4dk/MTCoGn4OL9DgA+W6/IDDj7Ief7qLul0VGXzLT3f4u3Nzg2hxJV54RxmjouPh6zod0s6Kw1IPml6uHQ8hkjIBXi1XHltNT6dSYKHTx0jO2yxciUcAHOYy/0DJq55O2NjZJV0fnd5ie3HnRlrtFUCr4DuHnM73+lIFgWuo+i8wkaWzrcsPuZ7rANplbzBZxoRx8Jnpqq69TDWTmQuMijZTFreEyyOdgRNtUR9r6vv0z9U20ypdipjpsrUXeykUaLE2xMrDb3I/d8A1EGITrtrAh5O4yYTeb2AsV9HddMIMapmQibnoXmNDh/YI47oQtGdGJzhz2wqChUBB9FOzMcS3Lmph1GTHTFPDaNfURa26ooug4=
